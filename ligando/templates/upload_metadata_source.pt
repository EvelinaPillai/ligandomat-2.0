<!DOCTYPE html>
<html metal:use-macro="load: base_layout.pt">
<html lang="${request.locale_name}">
<head>




</head>

<body>
<div class="main_wrapper">

<div id="metadata_wrapper" class="wrapper">
    <table>
        <tr>
            <td><label for="sourcetags">Sourcename: </label></td>
            <td><input type="text" title="The name of the source e.g. AML1" id="sourcetags"></td>
            <td><label for="organtags">Organ: </label></td>
            <td><input title=" e.g. kidney, liver" id="organtags"></td>
            <td><label for="organismtags">Organism: </label></td>
            <td><input title=" e.g. human, dog" id="organismtags"></td>
        </tr>
        <tr>
            <td><label for="histologytags">Histology: </label></td>
            <td><input title="e.g. benign, AML, CLL" id="histologytags"></td>
            <td><label for="dignitytags">Dignity: </label></td>
            <td><input title=" e.g. malignant, benign" id="dignitytags"></td>
            <td><label for="celltypetags">Celltype: </label></td>
            <td><input title=" e.g. bulk, PBMC" id="celltypetags"></td>
        </tr>
        <tr>
            <td><label for="locationtags">Location: </label></td>
            <td><input title=" e.g. NA" id="locationtags"></td>

            <td><label for="metastatistags">Metastatis: </label></td>
            <td><input value="0" title="0 = no, 1 = metastatis" id="metastatistags"></td>
            <td><label for="persontags">Person: </label></td>
            <td><input title="Your name. Umlaute like ä = ae, ü = ue, ö = oe" id="persontags"></td>
        </tr>
        <tr>
            <td><label for="commenttags">Comment: </label></td>
            <td><input title="Comment. Umlaute like ä = ae, ü = ue, ö = oe" id="commenttags"></td>
            <td>HLA-Typing:</td>
            <td><input id="typingtags" title="Write or select HLA-Typing. Seperate with ; "></td>
            <td><select id="typing_menu" onchange="addTyping()"></select></td>
        </tr>


    </table>
    <div class="datagrid">
        <button onclick="addSource()" class="nice_button">Add Source to list</button>
        <br>


        <table id="source_table">
            <!-- The table is created dynamically with js -->
        </table>

        <button id="check_button" class="nice_button" onclick="checkInput()">Check Sources</button>
        <form id="submit" method="POST" action=upload_metadata_source>
            <input type='text' id='commit_field' hidden name="sources">
            <input type="submit" id="commit_button" class="nice_button" hidden value="Commit Sources">
        </form>
    </div>
</div>

</div>


<script>
//TODO: no tooltip for sources
var cells = ['source',
    'organ',
    'organism',
    'histology',
    'dignity',
    'location',
    'metastatis',
    'celltype',
    'typing',
    'person',
    'comment'];
var nice_names = {'source': 'Sourcename',
    'organ': 'Organ',
    'organism': 'Organism',
    'histology': 'Histology',
    'dignity': 'Dignity',
    'location': 'Location',
    'metastatis': 'Metastatis',
    'celltype': 'Celltype',
    'typing': 'HLA-Typing',
    'person': 'Person',
    'comment': 'Comment'};
var autocomplete_dict = {'source':${source_names},
    'organ':${organ},
    'organism':${organism},
    'histology':${histology},
    'dignity':${dignity},
    'location':${location},
    'metastatis':${metastatis},
    'celltype':${celltype},
    'person':${person}};

$(function () {
    table = document.getElementById('source_table');
    var markup = ['<thead><tr><th>Sourcename</th><th>Organ</th><th>Organism</th><th>Histology</th><th>Dignity</th><th>Celltype</th><th>Location</th><th>Metastatis</th><th>HLA-Typing</th><th>Person</th><th>Comment</th><th>Options</th></tr></thead><tbody>'];


    for (var i = 1; i <= 11; i++) {
        if (i % 2 == 0) {
            markup.push('<tr id="row' + i + '" class="alt">');
        } else {
            markup.push('<tr id="row' + i + '" >');
        }
        markup.push('<td id="source_' + i + '"> </td>' +
                '<td id="organ_' + i + '"></td>' +
                '<td id="organism_' + i + '"></td>' +
                '<td id="histology_' + i + '"></td>' +
                '<td id="dignity_' + i + '"></td>' +
                '<td id="celltype_' + i + '"></td>' +
                '<td id="location_' + i + '"></td>' +
                '<td id="metastatis_' + i + '"></td>' +
                '<td id="typing_' + i + '"></td>' +
                '<td id="person_' + i + '"></td>' +
                '<td id="comment_' + i + '"></td>' +
                '<td>' +
                '<button type="button" title="Edit" onclick="editRow(' + i + ')"> <img height="12px" src="${request.static_url('ligando:static/images/Pencil-icon.png')}"> </button> <button type="button" title="Copy"  onclick="copyRow(' + i + ')"> <img height="12px" src="${request.static_url('ligando:static/images/copy-icon.png')}"> </button><button type="button" title="Remove" onclick="removeRow(' + i + ')"> <img height="12px" src="${request.static_url('ligando:static/images/Remove-icon.png')}"> </button> </td></tr>')
    }
    markup.push('</tbody>');
    table.innerHTML = markup.join("");
})


$(function () {
    for (i = 0; i < cells.length; i++) {

        if (cells[i] == 'typing') {
            continue;
        } else {
            $("#" + cells[i] + "tags").autocomplete({
                minLength: 0,
                minChars: 0,
                source: autocomplete_dict[cells[i]]
            }).focus(function () {
                $(this).autocomplete("search", "");
            });
        }
    }
    ;
});


$(function () {
    $(document).tooltip();
});


// HLA Typing menu
$(function () {
    var _select = $("#typing_menu");
    _select.append($('<option ></option>').val('-').html('-'));
    $.each(${typing}, function (val, text) {
        if (text == "NULL") {
            return;
        }
        _select.append(
                $('<option ></option>').val(text).html(text)
        );
    });
    $("#typing_menu").append(_select.html());
})

function findEmptyRow() {
    for (var i = 1; i < 11; i++) {
        if (document.getElementById("source_" + i).innerHTML == " ") {
            return i;
        }
    }
    return 0;
}

function editRow(id) {
    recoverRow(id);
    removeRow(id);
}

function removeRow(id) {
    for (i = 0; i < cells.length; i++) {
        document.getElementById(cells[i] + "_" + id).innerHTML = " ";
    }
    $('#source_table').dataTable().fnAdjustColumnSizing();
}

function copyRow(id) {
    recoverRow(id)
}

function recoverRow(id) {
    for (i = 0; i < cells.length; i++) {
        document.getElementById(cells[i] + 'tags').value = document.getElementById(cells[i] + "_" + id).innerHTML;
    }
}

function addSource() {
    var id = findEmptyRow();
    if (id == 0) {
        alert("no free row")
    } else {
        for (i = 0; i < cells.length; i++) {
            document.getElementById(cells[i] + "_" + id).innerHTML = document.getElementById(cells[i] + 'tags').value;
        }
    }
    $('#source_table').dataTable().fnAdjustColumnSizing();
    $("#commit_button").hide();
}
;

function addTyping() {
    var item = document.getElementById("typing_menu").value;
    if (item != "-") {
        if (document.getElementById("typingtags").value == "") {
            document.getElementById("typingtags").value = item
        } else {
            document.getElementById("typingtags").value += ";" + item
        }
    }
}

function checkInput() {
    for (var i = 1; i < 11; i++) {
        if (document.getElementById("source_" + i).innerHTML != " ") {
            for (l = 0; l < cells.length; l++) {
                if (cells[l] != "typing" && cells[l] != "comment") {
                    if (document.getElementById(cells[l] + "_" + i).innerHTML == " ") {
                        alert(nice_names[cells[l]] + " in row " + i + " is not allowed to be empty!");
                        return;
                    }
                    if (($.inArray(document.getElementById(cells[l] + "_" + i).innerHTML, autocomplete_dict[cells[l]])) == -1) {
                        if (!confirm("The " + nice_names[cells[l]] + " " + document.getElementById(cells[l] + "_" + i).innerHTML + " in row " + i + " is unknown. Is it really correct? (No typos?)")) {
                            return;
                        }
                    }
                } else if (cells[l] == "typing") {
                    if (document.getElementById(cells[l] + "_" + i).innerHTML.indexOf(",") != -1) {
                        alert(", is not allowed in HLA-Typing");
                        return;
                    } else if (document.getElementById(cells[l] + "_" + i).innerHTML.indexOf("HLA") != -1) {
                        alert("The 'HLA' prefix is not necessary in HLA-Typing. Please shorten your typings.");
                        return;
                    }
                }
            }
        }
    }
    var val = "[";
    for (var i = 1; i < 11; i++) {
        if (document.getElementById("source_" + i).innerHTML != " ") {
            var temp_dict = "{";
            for (l = 0; l < cells.length; l++) {
                temp_dict += "'" + cells[l] + "':'" + document.getElementById(cells[l] + "_" + i).innerHTML + "',";
            }
            temp_dict = temp_dict.replace(/,\s*$/, "");
            temp_dict += "},";
            val += temp_dict;
        }
    }
    val = val.replace(/,\s*$/, "");
    val += "]";
    document.getElementById("commit_field").value = val;
    $("#commit_button").show();
}

$(document).ready(function () {
    var oTable = $('#source_table').dataTable({
        "paging": false,
        "ordering": false,
        "info": false,
        "bFilter": false,
        "scrollX": true
    });
    $(window).bind('resize', function () {
        oTable.fnAdjustColumnSizing();
    });
});

</script>


</body>
</html>
