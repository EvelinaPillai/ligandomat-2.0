<html metal:use-macro="load: ../base_layout.pt">
<!DOCTYPE html>
<html lang="${request.locale_name}">
<head>


</head>

<body>

<metal:block fill-slot="content">

    <div class="main_wrapper">
        <h1 style="text-align: center">${organ}</h1>
        <table class="table table-striped table-bordered" style="width: 300px">
            <tr>
                <td>Peptides:</td>
                <td id="pep_stat"></td>
            </tr>
            <tr>
                <td>Sources:</td>
                <td id="source_stat"></td>
            </tr>
        </table>
        <div id="numberOfProteins" style="width:100%; height:400px;"></div>

        <table id="example" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
            <tr>
                <th>Source ID</th>
                <th>Patient ID</th>
                <th>Histology</th>
                <th>Dignity</th>
            </tr>
            </thead>
        </table>
    </div>

    <script>

        $(document).ready(function () {
// create dataTable
            $('#example').dataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                searching: false,
                data: ${sources},
                columns: [
                    {
                        data: "source_id",
                        "render": function (data, type, row) {
                            return "<a class='nostylelink'  href= '/source_id/" + data + "'>" + data + "</a>";
                        }
                    },
                    {
                        data: "patient_id",
                        "render": function (data, type, row) {
                            return "<a class='nostylelink'  href= '/source/" + data + "'>" + data + "</a>";
                        }
                    },
                    {
                        data: "histology",
                        "render": function (data, type, row) {
                            return "<a class='nostylelink' href= '/histology/" + data + "'>" + data + "</a>";
                        }
                    },
                    {
                        data: "dignity",
                        "render": function (data, type, row) {
                            return "<a class='nostylelink' href= '/dignity/" + data + "'>" + data + "</a>";
                        }
                    }
                ]
            });
        });
        // set statistics
        $(document).ready(function () {
            document.getElementById("pep_stat").innerHTML = "<a title='Show all Peptides'  class='nostylelink' href='javascript:post(\x22../peptide_query\x22, {organ: \x22${organ}\x22, grouping:\x22peptide\x22}," + ${statistic}[0]["pep_count"] + " )'> " + ${statistic}[0]["pep_count"] + "</a>";
            document.getElementById("source_stat").innerHTML =; ${sources}.
            length;

        });
        $(document).ready(function () {

            var options = {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Most abundant Proteins'
                },
                xAxis: {
                    categories: []
                },
                yAxis: {
                    title: {
                        text: 'Number of Proteins'
                    }
                },
                series: [],
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.x +
                                ' : ' + this.y + '</b>';
                    }
                }
            };

            protein_stats = ${protein_stats};
            var series = {
                name: {},
                data: [],
                showInLegend: false
            };
            var categories = [];
            $.each(protein_stats, function (i, row) {
                categories.push(row["gene_name"]);
                series.data.push(parseInt(row["source_count"]));

            });
            //series.data.push(protein_stats);
            console.log(series.data);
            console.log(categories);
            options.series.push(series);
            options.xAxis.categories = categories;
            console.log(options.series);
            console.log(options.xAxis.categories);
            console.log(options);


            $('#numberOfProteins').highcharts(options);
        });


    </script>

</metal:block>

</body>

</html>
</html>