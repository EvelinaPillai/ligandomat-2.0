<!DOCTYPE html>
<html metal:use-macro="load: ../base_layout.pt">
<html lang="${request.locale_name}">
<head>




</head>

<body>
<div class="main_wrapper">
    <div id="statistic_wrapper" class="wrapper" >
    <div class="updategrid">
        <div style=" width:480px; text-align: left">
    Please fill out the fields, which need to be updated. Empty fields will be ignored and instead the old data will be used.
</div>
<div style="float:left">
<table id="ms_run_update">
</table>
         <button id="check_button" class="nice_button" onclick="checkInput()">Check Input</button>
        <form id="submit" method="POST" action=update_metadata_ms_run>
            <input type='text' id='commit_field' hidden name="ms_runs">
            <input type="submit" id="commit_button" class="nice_button" hidden value="Update MS Run">
        </form>
    </div>

        </div>
        </div>
</div>


<script>

var cells = ['used_share',
    'comment',
    'source_source_id',
    'sample_mass',
    'sample_volume',
    'antibody_set',
    'antibody_mass'];
// cells with nice names
var nice_names = {'used_share': 'Used share',
    'comment': 'Comment',
    'source_source_id': 'Source ID',
    'sample_mass': 'Sample Mass',
    'sample_volume': 'sample_volume',
    'antibody_set': 'Antibody Set',
    'antibody_mass': 'Antibody Mass'};

var autocomplete_dict = {'used_share':${used_share},
    'comment':${comment},
    'source_source_id':${source_source_id},
    'sample_mass':${sample_mass},
    'sample_volume':${sample_volume},
    'antibody_set':${antibody_set},
    'antibody_mass':${antibody_mass}
};


// Create the input table
$(function () {
    var table = document.getElementById('ms_run_update');
    var markup = ['<thead><th> </th><th>Current</th><th>New</th></thead> <tbody>'];
    markup.push('<tr><td>Filename</td><td id="filename"></td><td id="filenames"></td></tr>')
    for(var i =0; i < cells.length; i++){
        if (i % 2 != 0) {
                markup.push('<tr >');
            } else {
                markup.push('<tr class="alt">');
           }
        markup.push('<td>'+nice_names[cells[i]]+'</td><td> <div id="'+cells[i]+'"></div></td><td ><input style="width:100%" id="'+cells[i]+'s" > </td></tr>')
    }

    markup.push('<tr><td>MS Run Date</td><td> <div id="ms_run_date"></div></td><td ><input style="width:100%" id="ms_run_dates" > </td></tr>')
    markup.push('</tbody>');
    table.innerHTML = markup.join("");
});


$(function(){

    for (var key in ${ms_run}[0]) {
      document.getElementById(key).innerHTML = ${ms_run}[0][key];
    }
    document.getElementById("filename").innerHTML = "${filename}";
    document.getElementById("filenames").innerHTML ="${filename}";
    document.getElementById("ms_run_date").innerHTML =${ms_run}[0]["ms_run_date"];
    }
);


// autocomplete
$(function () {
    for (var i = 0; i < cells.length; i++) {

            $("#" + cells[i] + "s").autocomplete({
                minLength: 0,
                minChars: 0,
                source: autocomplete_dict[cells[i]]
            }).focus(function () {
                $(this).autocomplete("search", "");
            });
    }

});


// Function to check the input in the table. If past the "Commit" button appears
function checkInput() {
    for (var l = 0; l < cells.length; l++) {
        if(document.getElementById(cells[l] + "s").value != "") {
            if (cells[l] != "source_source_id") {
                if (($.inArray(document.getElementById(cells[l] + "s").value, autocomplete_dict[cells[l]])) == -1) {
                    if (!confirm("The " + nice_names[cells[l]] + " "
                            + document.getElementById(cells[l] + "s").value + " is unknown. Is it really correct? (No typos?)")) {
                        return;
                    }
                }
            } else {
                if (($.inArray(document.getElementById(cells[l] + "s").value, autocomplete_dict[cells[l]])) == -1) {
                    if (alert("The " + nice_names[cells[l]] + " "
                            + document.getElementById(cells[l] + "s").value + " is unknown. Is it really correct? (No typos?)")) {
                        return;
                    }
                }
            }
        }

    }
    // create commit values dict and set these as value of the hidden commit_field
    var val = "{";
    for (var l = 0; l < cells.length; l++) {
        val += "'" + cells[l] + "':'" + document.getElementById(cells[l] + "s").value + "',";
    }
    val += "'filename':'" + "${filename}" + "',";
    console.log(document.getElementById("ms_run_dates").value);
    val += "'ms_run_date':'" +document.getElementById("ms_run_dates").value + "'";
    val += "}";

    document.getElementById("commit_field").value = val;
    $("#commit_button").show();
}

// Datepicker
    $(function() {
        $( "#ms_run_dates" ).datepicker({
                    dateFormat: "yy-mm-dd"
                }
        );
    });



</script>


</body>
</html>
